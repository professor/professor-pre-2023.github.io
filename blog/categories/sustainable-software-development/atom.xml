<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sustainable Software Development | Todd Sedano]]></title>
  <link href="http://professor.github.io/blog/categories/sustainable-software-development/atom.xml" rel="self"/>
  <link href="http://professor.github.io/"/>
  <updated>2018-11-30T06:53:39-08:00</updated>
  <id>http://professor.github.io/</id>
  <author>
    <name><![CDATA[Todd Sedano]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sustainable Software Development]]></title>
    <link href="http://professor.github.io/toddsedano/2017/07/14/sustainable-software-development-compared-to-extreme-programming.html"/>
    <updated>2017-07-14T08:05:00-07:00</updated>
    <id>http://professor.github.io/toddsedano/2017/07/14/sustainable-software-development-compared-to-extreme-programming</id>
    <content type="html"><![CDATA[<p>This table compares Sustainable Software Development to Extreme Programming</p>

<table class=comparison>
  <tr>
    <th>Sustainable Software Development</th>
    <th>XP Primary Practices</th>
  </tr>
  <tr>
    <td><same>
      Balanced Team</td>
    <td>Whole Team (Balanced Team)</td>
  </tr>
  <tr>
    <td><evolved>
      Shared Schedule, Be Present</td>
    <td>Sit Together</td>
  </tr>
  <tr>
    <td><mostly missing>
      Managing a Backlog</td>
    <td>Informative Workspace</td>
  </tr>
  <tr>
    <td> Shared Schedule </td>
    <td>Energized Work (<em>40-hr week)</em></td>
  </tr>
  <tr>
    <td>(Remove Knowledge Silos) Continuous Pair Programming</td>
    <td>Pair Programming</td>
  </tr>
  <tr>
    <td>(Remove Knowledge Silos) Overlapping Pair Rotations</td>
    <td></td>
  </tr>
  <tr>
    <td>(Remove Knowledge Silos) Knowledge Pollination</td>
    <td></td>
  </tr>
  <tr>
    <td>Managing a Backlog</td>
    <td>Stories</td>
  </tr>
  <tr>
    <td>Story Showcase  Meetings</td>
    <td>Weekly Cycle (Iteration Planning Meetings)</td>
  </tr>
  <tr>
    <td><Road Mapping></td>
    <td>Quarterly Cycle (Planning Game, Small Releases)</td>
  </tr>
  <tr>
    <td><Gone>
      not needed when there is no commitment to each week</td>
    <td>Slack</td>
  </tr>
  <tr>
    <td><Morphed into short feedback loops></td>
    <td>Ten-minute Build</td>
  </tr>
  <tr>
    <td>Live on Master</td>
    <td>Continuous Integration</td>
  </tr>
  <tr>
    <td>(Caretaking the Code) TDD / BDD</td>
    <td>Test-First Programming </td>
  </tr>
  <tr>
    <td>(Caretaking the Code) Continuous Refactoring</td>
    <td>Incremental Design (Simple Design
Refactoring)</td>
  </tr>
  
  <tr>
    <td>Retro</td>
    <td>N/A</td>
  </tr>
  <tr>
    <td></td>
    <td>2.0 Corollary Practices</td>
  </tr>
  <tr>
    <td><Morphed>
      User Research, User Interviews, User Validation
      <It is impractical to have an onsite customer. It is necessary to have an onsite product owner, covered in balanced team.></td>
    <td>Real Customer Involvement (On-site customer)</td>
  </tr>
  <tr>
    <td><Gone>
      This is a specific tactic for replacing legacy systems</td>
    <td>Incremental Deployment</td>
  </tr>
  <tr>
    <td>????</td>
    <td>Team Continuity</td>
  </tr>
  <tr>
    <td><Replaced with moving engineers where needed.  Allocations and considerations for forming a team. This seems related to Balanced Team></td>
    <td>Shrinking Teams</td>
  </tr>
  <tr>
    <td>???? We rarely do this, it depends on situation.</td>
    <td>Root-cause analysis</td>
  </tr>
  <tr>
    <td>Team Code Ownership</td>
    <td>Shared Code (Collective ownership)</td>
  </tr>
  <tr>
    <td>Caring about Code Quality
      <Subsumed by synchronous communication, intention revealing code></td>
    <td>Code and Tests</td>
  </tr>
  <tr>
    <td>Short-lived branches</td>
    <td>Single Code Base (branches live a few hours at most)</td>
  </tr>
  <tr>
    <td>Frequent Releases
      <Subsumed by short feedback cycles>
      Each team releases when features are done or at a given cadence</td>
    <td>Daily Deployment</td>
  </tr>
  <tr>
    <td>Flexible Scope Contracts </td>
    <td>Negotiated Scope Contract</td>
  </tr>
  <tr>
    <td></td>
    <td>Pay-per-use</td>
  </tr>
  <tr>
    <td>Avoid Technical Debt</td>
    <td>??</td>
  </tr>
  <tr>
    <td></td>
    <td></td>
  </tr>
</table>



]]></content>
  </entry>
  
</feed>
